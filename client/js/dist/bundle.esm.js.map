{"version":3,"file":"bundle.esm.js","sources":["../src/index.js"],"sourcesContent":["const STATUS = {\n    NOT_NEEDED: 0,\n    NEEDED: 1,\n    SUCCESS: 2,\n    FAIL: 3,\n    IN_PROGRESS: 4,\n    ERROR: 5,\n};\n\nexport default class AgeVerifier {\n    notNeeded = false;\n\n    constructor(config) {\n        if (!config || !config.backendEndpoints) {\n            throw new Error(\n                \"AgeVerifier configuration is invalid. Please provide backendEndpoints.\"\n            );\n        }\n        this.endpoints = config.backendEndpoints;\n        this.callbacks = {\n            onVerificationNeeded: config.onVerificationNeeded || (() => {}),\n            onVerificationNotNeeded: (data) => {\n                this.notNeeded = true;\n                if (config.onVerificationNotNeeded) {\n                    config.onVerificationNotNeeded(data);\n                }\n            },\n            onSuccess: config.onSuccess || (() => {}),\n            onFail: config.onFail || (() => {}),\n            onError: config.onError || (() => {}),\n            onVerificationInProgress:\n                config.onVerificationInProgress || (() => {}),\n        };\n        this.verificationApiDomain = config.verificationApiDomain;\n        this.verificationWindow = null;\n        this.pollingInterval = null;\n        this._handlePostMessage = this._handlePostMessage.bind(this);\n    }\n\n    async checkVerificationNeeded() {\n        try {\n            const response = await fetch(this.endpoints.checkNeeded);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n\n            if (data.hasOwnProperty(\"result\")) {\n                switch (data.result) {\n                    case STATUS.NOT_NEEDED:\n                        this.callbacks.onVerificationNotNeeded(data);\n                        break;\n                    case STATUS.SUCCESS:\n                        this.callbacks.onSuccess(data);\n                        break;\n                    case STATUS.NEEDED:\n                        this.callbacks.onVerificationNeeded(data);\n                        break;\n                    case STATUS.FAIL:\n                        this.callbacks.onFail(data);\n                        break;\n                    case STATUS.IN_PROGRESS:\n                        this.callbacks.onVerificationInProgress(data);\n                        break;\n                    case STATUS.ERROR:\n                        this.callbacks.onError(data);\n                        break;\n                    default:\n                        this.callbacks.onError(\n                            new Error(`Unknown status: ${data.result.status}`)\n                        );\n                }\n            } else {\n                this.callbacks.onError(\n                    new Error(\"Invalid response structure from server\")\n                );\n            }\n        } catch (error) {\n            this.callbacks.onError(error);\n        }\n    }\n\n    async startVerification() {\n        if (this.verificationWindow && !this.verificationWindow.closed) {\n            this.verificationWindow.focus();\n            return;\n        }\n\n        if (this.verificationWindow && this.verificationWindow.closed) {\n            this._cleanup();\n        }\n\n        try {\n            const response = await fetch(this.endpoints.startVerification);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n\n            if (data.url) {\n                this.verificationWindow = window.open(data.url);\n\n                if (!this.verificationWindow) {\n                    const error = new Error(\n                        \"Failed to open verification window. Please disable your popup blocker and try again.\"\n                    );\n                    this.callbacks.onError(error);\n                    return;\n                }\n\n                window.addEventListener(\"message\", this._handlePostMessage);\n\n                this.pollingInterval = setInterval(() => {\n                    if (\n                        this.verificationWindow &&\n                        this.verificationWindow.closed\n                    ) {\n                        this._cleanup();\n                    }\n                }, 500);\n            } else {\n                switch (data.result) {\n                    case STATUS.NOT_NEEDED:\n                        this.callbacks.onVerificationNotNeeded(data);\n                        break;\n                    case STATUS.SUCCESS:\n                        this.callbacks.onSuccess(data);\n                        break;\n                    case STATUS.FAIL:\n                        this.callbacks.onFail(data);\n                        break;\n                    case STATUS.ERROR:\n                        this.callbacks.onError(data);\n                        break;\n                    default:\n                        this.callbacks.onError(\n                            new Error(\"Invalid response structure from server\")\n                        );\n                }\n            }\n        } catch (error) {\n            this.callbacks.onError(error);\n        }\n    }\n\n    _handlePostMessage = (event) => {\n        if (\n            event.origin !== this.verificationApiDomain ||\n            event.source !== this.verificationWindow\n        ) {\n            return;\n        }\n\n        if (event.data) {\n            switch (event.data.result) {\n                case STATUS.NOT_NEEDED:\n                    this.callbacks.onVerificationNotNeeded(event.data);\n                    break;\n                case STATUS.NEEDED:\n                    this.callbacks.onVerificationNeeded(event.data);\n                    break;\n                case STATUS.SUCCESS:\n                    this.callbacks.onSuccess(event.data);\n                    break;\n                case STATUS.IN_PROGRESS:\n                    clearInterval(this.pollingInterval);\n                    this.callbacks.onVerificationInProgress(event.data);\n                    let polls = 0;\n                    this.pollingInterval = setInterval(() => {\n                        this.fetchResult();\n                        polls++;\n                        if (polls > 10) {\n                            clearInterval(this.pollingInterval);\n                            this.callbacks.onError(\n                                new Error(\n                                    \"Verification timed out. Please try again later.\"\n                                )\n                            );\n                        }\n                    }, 1000);\n                    break;\n                case STATUS.FAIL:\n                    this.callbacks.onFail(event.data);\n                    break;\n                case STATUS.ERROR:\n                    this.callbacks.onError(event.data);\n                    break;\n                default:\n                    this.callbacks.onError(\n                        new Error(`Unknown status: ${event.data.result}`)\n                    );\n            }\n        }\n    };\n\n    async fetchResult() {\n        try {\n            const response = await fetch(this.endpoints.checkResult);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n\n            if (\n                data.result &&\n                (data.result.status === 1 || data.result.status === 2)\n            ) {\n                this.callbacks.onSuccess(data);\n            } else {\n                this.callbacks.onFail(data);\n            }\n        } catch (error) {\n            this.callbacks.onError(error);\n        } finally {\n            this._cleanup();\n        }\n    }\n\n    async updateVerificationResult() {\n        if (this.notNeeded) {\n            return;\n        }\n\n        const response = await fetch(this.endpoints.updateResult, {\n            method: \"POST\",\n        });\n    }\n\n    _cleanup = () => {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n            this.pollingInterval = null;\n        }\n\n        window.removeEventListener(\"message\", this._handlePostMessage);\n\n        if (this.verificationWindow) {\n            if (!this.verificationWindow.closed) {\n                this.verificationWindow.close();\n            }\n            this.verificationWindow = null;\n        }\n    };\n}\n"],"names":[],"mappings":"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"}