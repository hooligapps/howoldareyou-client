{"version":3,"file":"bundle.umd.js","sources":["../src/index.js"],"sourcesContent":["const STATUS = {\n    NOT_NEEDED: 0,\n    NEEDED: 1,\n    SUCCESS: 2,\n    FAIL: 3,\n    IN_PROGRESS: 4,\n    ERROR: 5,\n};\n\nexport default class AgeVerifier {\n    constructor(config) {\n        if (!config || !config.backendEndpoints) {\n            throw new Error(\n                \"AgeVerifier configuration is invalid. Please provide backendEndpoints.\"\n            );\n        }\n        this.endpoints = config.backendEndpoints;\n        this.callbacks = {\n            onVerificationNeeded: config.onVerificationNeeded || (() => {}),\n            onVerificationNotNeeded:\n                config.onVerificationNotNeeded || (() => {}),\n            onSuccess: config.onSuccess || (() => {}),\n            onFail: config.onFail || (() => {}),\n            onError: config.onError || (() => {}),\n        };\n        this.verificationApiDomain = config.verificationApiDomain;\n        this.verificationWindow = null;\n        this.pollingInterval = null;\n        this._handlePostMessage = this._handlePostMessage.bind(this);\n    }\n\n    async checkVerificationNeeded() {\n        try {\n            const response = await fetch(this.endpoints.checkNeeded);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n\n            if (data.result) {\n                switch (data.result) {\n                    case STATUS.NOT_NEEDED:\n                        this.callbacks.onVerificationNotNeeded(data);\n                        break;\n                    case STATUS.SUCCESS:\n                        this.callbacks.onSuccess(data);\n                        break;\n                    case STATUS.NEEDED:\n                        this.callbacks.onVerificationNeeded(data);\n                        break;\n                    case STATUS.FAIL:\n                        this.callbacks.onFail(data);\n                        break;\n                    case STATUS.IN_PROGRESS:\n                        this.callbacks.onVerificationInProgress(data);\n                        break;\n                    case STATUS.ERROR:\n                        this.callbacks.onError(data);\n                        break;\n                    default:\n                        this.callbacks.onError(\n                            new Error(`Unknown status: ${data.result.status}`)\n                        );\n                }\n            } else {\n                this.callbacks.onError(\n                    new Error(\"Invalid response structure from server\")\n                );\n            }\n        } catch (error) {\n            this.callbacks.onError(error);\n        }\n    }\n\n    async startVerification() {\n        if (this.verificationWindow && !this.verificationWindow.closed) {\n            this.verificationWindow.focus();\n            return;\n        }\n\n        if (this.verificationWindow && this.verificationWindow.closed) {\n            this._cleanup();\n        }\n\n        try {\n            const response = await fetch(this.endpoints.startVerification);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n\n            if (data.url) {\n                this.verificationWindow = window.open(data.url);\n\n                if (!this.verificationWindow) {\n                    const error = new Error(\n                        \"Failed to open verification window. Please disable your popup blocker and try again.\"\n                    );\n                    this.callbacks.onError(error);\n                    return;\n                }\n\n                window.addEventListener(\"message\", this._handlePostMessage);\n\n                this.pollingInterval = setInterval(() => {\n                    if (\n                        this.verificationWindow &&\n                        this.verificationWindow.closed\n                    ) {\n                        this._cleanup();\n                    }\n                }, 500);\n            } else {\n                switch (data.result) {\n                    case STATUS.NOT_NEEDED:\n                        this.callbacks.onVerificationNotNeeded(data);\n                        break;\n                    case STATUS.SUCCESS:\n                        this.callbacks.onSuccess(data);\n                        break;\n                    case STATUS.FAIL:\n                        this.callbacks.onFail(data);\n                        break;\n                    case STATUS.ERROR:\n                        this.callbacks.onError(data);\n                        break;\n                    default:\n                        this.callbacks.onError(\n                            new Error(\"Invalid response structure from server\")\n                        );\n                }\n            }\n        } catch (error) {\n            this.callbacks.onError(error);\n        }\n    }\n\n    _handlePostMessage = (event) => {\n        if (\n            event.origin !== this.verificationApiDomain ||\n            event.source !== this.verificationWindow\n        ) {\n            return;\n        }\n\n        if (event.data) {\n            switch (event.data.result) {\n                case STATUS.SUCCESS:\n                    this.callbacks.onSuccess(event.data);\n                    break;\n                case STATUS.IN_PROGRESS:\n                    this.pollingInterval = setInterval(() => {\n                        this.fetchResult();\n                    }, 1000);\n                    break;\n                case STATUS.FAIL:\n                    this.callbacks.onFail(event.data);\n                    break;\n                case STATUS.ERROR:\n                    this.callbacks.onError(event.data);\n                    break;\n                default:\n                    this.callbacks.onError(\n                        new Error(`Unknown status: ${event.data.result}`)\n                    );\n            }\n        }\n    };\n\n    async fetchResult() {\n        try {\n            const response = await fetch(this.endpoints.checkResult);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n\n            if (\n                data.result &&\n                (data.result.status === 1 || data.result.status === 2)\n            ) {\n                this.callbacks.onSuccess(data);\n            } else {\n                this.callbacks.onFail(data);\n            }\n        } catch (error) {\n            this.callbacks.onError(error);\n        } finally {\n            this._cleanup();\n        }\n    }\n\n    async updateVerificationResult() {\n        const response = await fetch(this.endpoints.updateResult, {\n            method: \"POST\",\n        });\n    }\n\n    _cleanup = () => {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n            this.pollingInterval = null;\n        }\n\n        window.removeEventListener(\"message\", this._handlePostMessage);\n\n        if (this.verificationWindow) {\n            if (!this.verificationWindow.closed) {\n                this.verificationWindow.close();\n            }\n            this.verificationWindow = null;\n        }\n    };\n}\n"],"names":[],"mappings":"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"}